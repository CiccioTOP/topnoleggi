<main>
 
    <center>
      <div class="modificaparcheggio">

          <br>
          <br>
            <br><br>
      <img style="width: 28%; margin: 30px;" src="../images/gestione_profilo.png" alt="" usemap="#gestione_profilo" >
     <map name="gestione_profilo">
      <area shape="rect" coords="0,0,500,500" alt="" href="/gestione_utenze">
        </map>

        <img style="width: 35%; margin: 30px;" src="../images/gestione_mezzi.png" alt="gestione_mezzi" usemap="#gestione_mezzi" >
     <map name="gestione_mezzi">
      <area shape="rect" coords="0,0,500,500" alt="" href="/gestione_mezzi">
        </map>
      
        <br>
         
    <img style="width: 28%; margin: 30px;" src="../images/gestione.png" alt="ricercamezzo" usemap="#corse" >
     <map name="corse">
       
    <area href="/cercaNoleggio" shape="rect" coords="0,0,500,500" alt="ricerca">

    </map>
   

    <img style="width: 25%; margin: 30px;" src="../images/Parcheggio.png" alt="ricercamezzo" usemap="#gestioneParcheggi" >
     <map name="gestioneParcheggi">
       
    <area href="/gestioneParcheggi" shape="rect" coords="0,0,500,500" alt="ricerca">

    </map>

</div>
   
</div>
 

</center>


<script>
notifica = ('<%-notifica.string%>')
counter = parseInt('<%-notifica.counter%>')



if (notifica == 'mezzo aggiunto' && counter == 0 ){

const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Mezzo aggiunto con successo'
})}


}

else if (notifica == 'parcheggio aggiunto' && counter == 0 ){

const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Parcheggio aggiunto con successo'
})}


}

else if (notifica == 'modifica effettuata' && counter == 0 ){

const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Noleggio Modificato con successo'
})}
}

else if (notifica == 'Mezzo Cancellato' && counter == 0 ){

const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Mezzo Cancellato con successo'
})}
}

else if (notifica == 'Parcheggio Cancellato' && counter == 0 ){

const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Parcheggio Cancellato con successo'
})}
}

else if (notifica == 'mezzo in ritardo' && counter == 0 ){
msg = '<%- notifica.msg%>'

  var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
  Swal.fire({
  icon: 'warning',
  title: 'Attenzione',
  text: msg
})
}


}

else if (notifica == 'utente modificato' && counter == 0 ){
const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Utente modificato con successo'
})}
}



</script>