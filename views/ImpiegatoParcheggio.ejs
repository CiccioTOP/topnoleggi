<!DOCTYPE html>
<html>
<head>
    <%- include('partials/head') -%>
    <title>
    Impiegato Parcheggio
    </title>
</head>
<body>
<% include partials/navbar.ejs %>
    <div class="container">
      <div id="corpoPagina">
        <h3><br>Pagina Riservata all'Impiegato del Parcheggio</h3>
        <div class="formContainer">
        <% include partials/ImpiegatoParcheggio.ejs %>
        </div>
      </div>
    </div>
</body>
<% include partials/footer.ejs %>
</html>
<script>
notifica = ('<%-notifica.string%>')
counter = parseInt('<%-notifica.counter%>')


    if (notifica == 'login' && counter == 0 ){
  const Toast = Swal.mixin({
                      toast: true,
                      position: 'top-end',
                      showConfirmButton: false,
                      timer: 3000,
                      timerProgressBar: true,
                      didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                      }
                    })
                   var state = history.state || {};
  var reloadCount = state.reloadCount || 0;
  if (performance.navigation.type === 1) { // Reload
      state.reloadCount = ++reloadCount;
      history.replaceState(state, null, document.URL);
  } else if (reloadCount) {
      delete state.reloadCount;
      reloadCount = 0;
      history.replaceState(state, null, document.URL);
  }
  if (reloadCount >= 1) {
      // Now, do whatever you want...
  }
  else{                   
                    Toast.fire({
                      icon: 'success',
                      title: 'Autenticazione effettuata con successo'
                    })}
                   
                   {
                     
                   }}

                   else if (notifica == 'guasto segnalato' && counter == 0 ){

const Toast = Swal.mixin({
  toast: true,
  position: 'top-end',
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener('mouseenter', Swal.stopTimer)
    toast.addEventListener('mouseleave', Swal.resumeTimer)
  }
})
var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
Toast.fire({
  icon: 'success',
  title: 'Guasto segnalato con successo'
})}
}


else if (notifica == 'Parcheggio non assegnato' && counter == 0 ){


var state = history.state || {};
var reloadCount = state.reloadCount || 0;
if (performance.navigation.type === 1) { // Reload
state.reloadCount = ++reloadCount;
history.replaceState(state, null, document.URL);
} else if (reloadCount) {
delete state.reloadCount;
reloadCount = 0;
history.replaceState(state, null, document.URL);
}
if (reloadCount >= 1) {
// Now, do whatever you want...
}
else{                   
  Swal.fire({
  icon: 'error',
  title: 'Oops',
  text: 'Non ti Ã¨ stato ancora assegnato un parcheggio',
  footer: 'Contatta il tuo amministratore'
})
}


}
</script>